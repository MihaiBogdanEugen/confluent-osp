---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: kfk
  namespace: confluent-platform  
  labels:
    category: kafka
spec:
  serviceName: kfk-svc
  replicas: 5
  template:
    metadata:
      labels:
        app: kfk
    spec: 
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values: 
                    - kfk
              topologyKey: "kubernetes.io/hostname"
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
             - weight: 1
               podAffinityTerm:
                 labelSelector:
                    matchExpressions:
                      - key: "app"
                        operator: In
                        values: 
                        - zk
                 topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 300
      containers:
      - name: confluent-kafka
        imagePullPolicy: Always
        image: mbe1224/confluent-kafka
        resources:
          requests:
            memory: "1Gi"
            cpu: 500m
        ports:
        - containerPort: 9092
          name: server
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zk-0.zk-svc.confluent-platform.svc.cluster.local:2181,zk-1.zk-svc.confluent-platform.svc.cluster.local:2181,zk-2.zk-svc.confluent-platform.svc.cluster.local:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://localhost:9092"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          valueFrom:
            configMapKeyRef:
                name: kfk-cm
                key: offsets.topic.replication.factor
        - name: KAFKA_LOG4J_ROOT_LOGLEVEL
          valueFrom:
            configMapKeyRef:
                name: kfk-cm
                key: log4j.root.loglevel                
        readinessProbe:
          exec:
           command: 
            - sh 
            - -c 
            - "kafka-run-class kafka.admin.BrokerApiVersionsCommand --bootstrap-server=localhost:9092"
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/kafka            
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi